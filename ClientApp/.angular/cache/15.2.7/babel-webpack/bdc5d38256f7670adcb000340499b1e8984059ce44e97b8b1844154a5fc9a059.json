{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EvaluacionComponent {\n  constructor(http, baseUrl) {\n    this.forecasts = [];\n    http.get(baseUrl + 'weatherforecast').subscribe(result => {\n      this.forecasts = result;\n    }, error => console.error(error));\n  }\n}\nEvaluacionComponent.ɵfac = function EvaluacionComponent_Factory(t) {\n  return new (t || EvaluacionComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nEvaluacionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EvaluacionComponent,\n  selectors: [[\"app-evaluacion-data\"]],\n  decls: 3,\n  vars: 0,\n  template: function EvaluacionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n      i0.ɵɵtext(2, \" Hola mundo \");\n      i0.ɵɵelementEnd()();\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,mBAAmB;EAG9BC,YAAYC,IAAgB,EAAsBC,OAAe;IAF1D,cAAS,GAAsB,EAAE;IAGtCD,IAAI,CAACE,GAAG,CAAoBD,OAAO,GAAG,iBAAiB,CAAC,CAACE,SAAS,CAACC,MAAM,IAAG;MAC1E,IAAI,CAACC,SAAS,GAAGD,MAAM;IACzB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;;AAPWR,mBAAmB;mBAAnBA,mBAAmB,4DAGQ,UAAU;AAAA;AAHrCA,mBAAmB;QAAnBA,mBAAmB;EAAAU;EAAAC;EAAAC;EAAAC;IAAA;MCPhCC,2BAAK;MAEDA,4BACF;MAAAA,iBAAI","names":["EvaluacionComponent","constructor","http","baseUrl","get","subscribe","result","forecasts","error","console","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\angul\\Desktop\\Proyectos\\ExamenASP\\ClientApp\\src\\app\\evaluacion\\evaluacion.component.ts","C:\\Users\\angul\\Desktop\\Proyectos\\ExamenASP\\ClientApp\\src\\app\\evaluacion\\evaluacion.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-evaluacion-data',\r\n  templateUrl: './evaluacion.component.html'\r\n})\r\nexport class EvaluacionComponent {\r\n  public forecasts: WeatherForecast[] = [];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n","<div>\r\n  <p>\r\n    Hola mundo\r\n  </p>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}